## @package lensingClass
# Contains lensing calculation functions
#
# lensing class

import cosmocalcs

class lensingClass(object):
    """
    cosmocalcs.cosmologyCalculator(h, 1, .05, .8)
    """

    def __init__(self, z):
    
        self.z = z

    def returnComovingDistnace(self):
        return 2/self.h*(1 - 1/pow(1 + self.z, 0.5))

    def lesningIntegrand(z, x, n_i):
        return cosmothon.calcAngularDistance(z, x)/cosmothon.calcAngularDistance(z)*n_i(x)

    def lensingWeightFunction(z):

        from scipy.integrate import quad

        n_i = 1

        D_A = cosmocalcs.cosmologyCalculator(h, 1, 0.05, 0.08)

        print D_A

        W = 3/2*self.omegamat*self.h*self.h*(1 + z)*D_A

        W *= quad(lensingIntegrand, self.z, zmax, args=(self.z, x, n_i)) 

        return W
